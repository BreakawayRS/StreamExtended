{
  "api/StreamExtended.Models.SslExtension.html": {
    "href": "api/StreamExtended.Models.SslExtension.html",
    "title": "Class SslExtension | StreamExtended",
    "keywords": "Class SslExtension Inheritance Object SslExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended.Models Assembly : StreamExtended.dll Syntax public class SslExtension Constructors SslExtension(Int32, String, String) Declaration public SslExtension(int value, string name, string data) Parameters Type Name Description Int32 value String name String data Properties Data Declaration public string Data { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String Value Declaration public int Value { get; set; } Property Value Type Description Int32"
  },
  "api/StreamExtended.Network.CustomBufferedStream.html": {
    "href": "api/StreamExtended.Network.CustomBufferedStream.html",
    "title": "Class CustomBufferedStream | StreamExtended",
    "keywords": "Class CustomBufferedStream A custom network stream inherited from stream with an underlying buffer Inheritance Object MarshalByRefObject Stream CustomBufferedStream Implements IDisposable Inherited Members Stream.Null Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.Close() Stream.Dispose() Stream.FlushAsync() Stream.CreateWaitHandle() Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(Byte[], Int32, Int32) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(Byte[], Int32, Int32) Stream.Synchronized(Stream) Stream.ObjectInvariant() MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended.Network Assembly : StreamExtended.dll Syntax public class CustomBufferedStream : Stream, IDisposable Constructors CustomBufferedStream(Stream, Int32) Initializes a new instance of the CustomBufferedStream class. Declaration public CustomBufferedStream(Stream baseStream, int bufferSize) Parameters Type Name Description Stream baseStream The base stream. Int32 bufferSize Size of the buffer. Properties Available Declaration public int Available { get; } Property Value Type Description Int32 CanRead When overridden in a derived class, gets a value indicating whether the current stream supports reading. Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead CanSeek When overridden in a derived class, gets a value indicating whether the current stream supports seeking. Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek CanTimeout Gets a value that determines whether the current stream can time out. Declaration public override bool CanTimeout { get; } Property Value Type Description Boolean Overrides Stream.CanTimeout CanWrite When overridden in a derived class, gets a value indicating whether the current stream supports writing. Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite DataAvailable Declaration public bool DataAvailable { get; } Property Value Type Description Boolean Length When overridden in a derived class, gets the length in bytes of the stream. Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length Position When overridden in a derived class, gets or sets the position within the current stream. Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position ReadTimeout Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out. Declaration public override int ReadTimeout { get; set; } Property Value Type Description Int32 Overrides Stream.ReadTimeout WriteTimeout Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out. Declaration public override int WriteTimeout { get; set; } Property Value Type Description Int32 Overrides Stream.WriteTimeout Methods CopyToAsync(Stream, Int32, CancellationToken) Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token. Declaration public override Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken) Parameters Type Name Description Stream destination The stream to which the contents of the current stream will be copied. Int32 bufferSize The size, in bytes, of the buffer. This value must be greater than zero. The default size is 81920. CancellationToken cancellationToken The token to monitor for cancellation requests. The default value is System.Threading.CancellationToken.None . Returns Type Description Task A task that represents the asynchronous copy operation. Overrides Stream.CopyToAsync(Stream, Int32, CancellationToken) Dispose(Boolean) Releases the unmanaged resources used by the Stream and optionally releases the managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides Stream.Dispose(Boolean) FillBuffer() Fills the buffer. Declaration public bool FillBuffer() Returns Type Description Boolean FillBufferAsync() Fills the buffer asynchronous. Declaration public Task<bool> FillBufferAsync() Returns Type Description Task < Boolean > FillBufferAsync(CancellationToken) Fills the buffer asynchronous. Declaration public Task<bool> FillBufferAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > Flush() When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device. Declaration public override void Flush() Overrides Stream.Flush() FlushAsync(CancellationToken) Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests. Declaration public override Task FlushAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The token to monitor for cancellation requests. The default value is System.Threading.CancellationToken.None . Returns Type Description Task A task that represents the asynchronous flush operation. Overrides Stream.FlushAsync(CancellationToken) PeekByteAsync(Int32) Declaration public Task<int> PeekByteAsync(int index) Parameters Type Name Description Int32 index Returns Type Description Task < Int32 > PeekByteFromBuffer(Int32) Declaration public byte PeekByteFromBuffer(int index) Parameters Type Name Description Int32 index Returns Type Description Byte Read(Byte[], Int32, Int32) When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read. Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and ( offset + count - 1) replaced by the bytes read from the current source. Int32 offset The zero-based byte offset in buffer at which to begin storing the data read from the current stream. Int32 count The maximum number of bytes to be read from the current stream. Returns Type Description Int32 The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached. Overrides Stream.Read(Byte[], Int32, Int32) ReadAsync(Byte[], Int32, Int32, CancellationToken) Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests. Declaration public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer The buffer to write the data into. Int32 offset The byte offset in buffer at which to begin writing data from the stream. Int32 count The maximum number of bytes to read. CancellationToken cancellationToken The token to monitor for cancellation requests. The default value is System.Threading.CancellationToken.None . Returns Type Description Task < Int32 > A task that represents the asynchronous read operation. The value of the parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached. Overrides Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) ReadByte() Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream. Declaration public override int ReadByte() Returns Type Description Int32 The unsigned byte cast to an Int32, or -1 if at the end of the stream. Overrides Stream.ReadByte() ReadByteFromBuffer() Declaration public byte ReadByteFromBuffer() Returns Type Description Byte Seek(Int64, SeekOrigin) When overridden in a derived class, sets the position within the current stream. Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset A byte offset relative to the origin parameter. SeekOrigin origin A value of type SeekOrigin indicating the reference point used to obtain the new position. Returns Type Description Int64 The new position within the current stream. Overrides Stream.Seek(Int64, SeekOrigin) SetLength(Int64) When overridden in a derived class, sets the length of the current stream. Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value The desired length of the current stream in bytes. Overrides Stream.SetLength(Int64) Write(Byte[], Int32, Int32) When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written. Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer An array of bytes. This method copies count bytes from buffer to the current stream. Int32 offset The zero-based byte offset in buffer at which to begin copying bytes to the current stream. Int32 count The number of bytes to be written to the current stream. Overrides Stream.Write(Byte[], Int32, Int32) WriteAsync(Byte[], Int32, Int32, CancellationToken) Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests. Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer The buffer to write data from. Int32 offset The zero-based byte offset in buffer from which to begin copying bytes to the stream. Int32 count The maximum number of bytes to write. CancellationToken cancellationToken The token to monitor for cancellation requests. The default value is System.Threading.CancellationToken.None . Returns Type Description Task A task that represents the asynchronous write operation. Overrides Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) WriteByte(Byte) Writes a byte to the current position in the stream and advances the position within the stream by one byte. Declaration public override void WriteByte(byte value) Parameters Type Name Description Byte value The byte to write to the stream. Overrides Stream.WriteByte(Byte) Implements System.IDisposable See Also Stream"
  },
  "api/StreamExtended.Helpers.BufferPool.html": {
    "href": "api/StreamExtended.Helpers.BufferPool.html",
    "title": "Class BufferPool | StreamExtended",
    "keywords": "Class BufferPool Inheritance Object BufferPool Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended.Helpers Assembly : StreamExtended.dll Syntax public static class BufferPool Methods GetBuffer(Int32) Declaration public static byte[] GetBuffer(int bufferSize) Parameters Type Name Description Int32 bufferSize Returns Type Description Byte [] ReturnBuffer(Byte[]) Declaration public static void ReturnBuffer(byte[] buffer) Parameters Type Name Description Byte [] buffer"
  },
  "api/StreamExtended.Network.CustomBinaryReader.html": {
    "href": "api/StreamExtended.Network.CustomBinaryReader.html",
    "title": "Class CustomBinaryReader | StreamExtended",
    "keywords": "Class CustomBinaryReader A custom binary reader that would allo us to read string line by line using the specified encoding as well as to read bytes as required Inheritance Object CustomBinaryReader Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended.Network Assembly : StreamExtended.dll Syntax public class CustomBinaryReader : IDisposable Constructors CustomBinaryReader(CustomBufferedStream, Int32) Declaration public CustomBinaryReader(CustomBufferedStream stream, int bufferSize) Parameters Type Name Description CustomBufferedStream stream Int32 bufferSize Properties Buffer Declaration public byte[] Buffer { get; } Property Value Type Description Byte [] Methods Dispose() Declaration public void Dispose() ReadAllLinesAsync() Read until the last new line Declaration public Task<List<string>> ReadAllLinesAsync() Returns Type Description Task < List < String >> ReadAndIgnoreAllLinesAsync() Read until the last new line, ignores the result Declaration public Task ReadAndIgnoreAllLinesAsync() Returns Type Description Task ReadBytesAsync(Byte[], Int32) Read the specified number (or less) of raw bytes from the base stream to the given buffer Declaration public Task<int> ReadBytesAsync(byte[] buffer, int bytesToRead) Parameters Type Name Description Byte [] buffer Int32 bytesToRead Returns Type Description Task < Int32 > The number of bytes read ReadLineAsync() Read a line from the byte stream Declaration public Task<string> ReadLineAsync() Returns Type Description Task < String > Implements System.IDisposable"
  },
  "api/StreamExtended.Network.html": {
    "href": "api/StreamExtended.Network.html",
    "title": "Namespace StreamExtended.Network | StreamExtended",
    "keywords": "Namespace StreamExtended.Network Classes ClientHelloAlpnAdderStream CustomBinaryReader A custom binary reader that would allo us to read string line by line using the specified encoding as well as to read bytes as required CustomBufferedPeekStream CustomBufferedStream A custom network stream inherited from stream with an underlying buffer ServerHelloAlpnAdderStream"
  },
  "api/StreamExtended.html": {
    "href": "api/StreamExtended.html",
    "title": "Namespace StreamExtended | StreamExtended",
    "keywords": "Namespace StreamExtended Classes ClientHelloInfo ServerHelloInfo SslTools"
  },
  "api/StreamExtended.Network.ClientHelloAlpnAdderStream.html": {
    "href": "api/StreamExtended.Network.ClientHelloAlpnAdderStream.html",
    "title": "Class ClientHelloAlpnAdderStream | StreamExtended",
    "keywords": "Class ClientHelloAlpnAdderStream Inheritance Object MarshalByRefObject Stream ClientHelloAlpnAdderStream Implements IDisposable Inherited Members Stream.Null Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyToAsync(Stream, Int32, CancellationToken) Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.Close() Stream.Dispose() Stream.Dispose(Boolean) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(Byte[], Int32, Int32) Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(Byte[], Int32, Int32) Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) Stream.ReadByte() Stream.WriteByte(Byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended.Network Assembly : StreamExtended.dll Syntax public class ClientHelloAlpnAdderStream : Stream, IDisposable Constructors ClientHelloAlpnAdderStream(CustomBufferedStream) Declaration public ClientHelloAlpnAdderStream(CustomBufferedStream stream) Parameters Type Name Description CustomBufferedStream stream Properties CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite Length Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position Methods Flush() Declaration public override void Flush() Overrides Stream.Flush() Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Overrides Stream.Read(Byte[], Int32, Int32) Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 Overrides Stream.Seek(Int64, SeekOrigin) SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Overrides Stream.SetLength(Int64) Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Overrides Stream.Write(Byte[], Int32, Int32) Implements System.IDisposable"
  },
  "README.html": {
    "href": "README.html",
    "title": "Stream extended | StreamExtended",
    "keywords": "Stream extended An extended SslStream with support for SNI An extended BufferedStream with support for reading bytes and string Installation Install by nuget Install-Package StreamExtended Supports .Net Standard 1.3 or above .Net Framework 4.5 or above Usage Server Name Indication var yourClientStream = new CustomBufferedStream(clientStream, 4096) var clientSslHelloInfo = await SslTools.PeekClientHello(yourClientStream); //will be null if no client hello was received (not a SSL connection) if (clientSslHelloInfo != null) { string sniHostName = clientSslHelloInfo.Extensions?.FirstOrDefault(x => x.Name == \"server_name\")?.Data; //create yourClientCertificate based on sniHostName //and now as usual var sslStream = new SslStream(yourClientStream); await sslStream.AuthenticateAsServerAsync(yourClientCertificate, false, SupportedSslProtocols, false); } Peek SSL Information Peek Client SSL Hello var yourClientStream = new CustomBufferedStream(clientStream, 4096) var clientSslHelloInfo = await SslTools.PeekClientHello(yourClientStream); //will be null if no client hello was received (not a SSL connection) if(clientSslHelloInfo!=null) { //and now as usual var sslStream = new SslStream(yourClientStream); await sslStream.AuthenticateAsServerAsync(yourClientCertificate, false, SupportedSslProtocols, false); } Peek Server SSL Hello var yourServerStream = new CustomBufferedStream(serverStream, 4096) var serverSslHelloInfo = await SslTools.PeekServerHello(yourServerStream); //will be null if no server hello was received (not a SSL connection) if(serverSslHelloInfo!=null) { //and now as usual var sslStream = new SslStream(yourServerStream, false, null, null); await sslStream.AuthenticateAsClientAsync(yourRemoteHostName, null, yourSupportedSslProtocols, false); } Contributors Special thanks to @honfika who contributed this code originally in Titanium Web Proxy project."
  },
  "api/StreamExtended.Network.ServerHelloAlpnAdderStream.html": {
    "href": "api/StreamExtended.Network.ServerHelloAlpnAdderStream.html",
    "title": "Class ServerHelloAlpnAdderStream | StreamExtended",
    "keywords": "Class ServerHelloAlpnAdderStream Inheritance Object MarshalByRefObject Stream ServerHelloAlpnAdderStream Implements IDisposable Inherited Members Stream.Null Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyToAsync(Stream, Int32, CancellationToken) Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.Close() Stream.Dispose() Stream.Dispose(Boolean) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(Byte[], Int32, Int32) Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(Byte[], Int32, Int32) Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) Stream.ReadByte() Stream.WriteByte(Byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended.Network Assembly : StreamExtended.dll Syntax public class ServerHelloAlpnAdderStream : Stream, IDisposable Constructors ServerHelloAlpnAdderStream(CustomBufferedStream) Declaration public ServerHelloAlpnAdderStream(CustomBufferedStream stream) Parameters Type Name Description CustomBufferedStream stream Properties CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite Length Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position Methods Flush() Declaration public override void Flush() Overrides Stream.Flush() Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Overrides Stream.Read(Byte[], Int32, Int32) Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 Overrides Stream.Seek(Int64, SeekOrigin) SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Overrides Stream.SetLength(Int64) Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Overrides Stream.Write(Byte[], Int32, Int32) Implements System.IDisposable"
  },
  "api/StreamExtended.Models.html": {
    "href": "api/StreamExtended.Models.html",
    "title": "Namespace StreamExtended.Models | StreamExtended",
    "keywords": "Namespace StreamExtended.Models Classes SslExtension"
  },
  "api/StreamExtended.Helpers.html": {
    "href": "api/StreamExtended.Helpers.html",
    "title": "Namespace StreamExtended.Helpers | StreamExtended",
    "keywords": "Namespace StreamExtended.Helpers Classes BufferPool"
  },
  "api/StreamExtended.SslTools.html": {
    "href": "api/StreamExtended.SslTools.html",
    "title": "Class SslTools | StreamExtended",
    "keywords": "Class SslTools Inheritance Object SslTools Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended Assembly : StreamExtended.dll Syntax public class SslTools Methods IsClientHello(CustomBufferedStream) Declaration public static Task<bool> IsClientHello(CustomBufferedStream stream) Parameters Type Name Description CustomBufferedStream stream Returns Type Description Task < Boolean > IsServerHello(CustomBufferedStream) Declaration public static Task<bool> IsServerHello(CustomBufferedStream stream) Parameters Type Name Description CustomBufferedStream stream Returns Type Description Task < Boolean > PeekClientHello(CustomBufferedStream) Declaration public static Task<ClientHelloInfo> PeekClientHello(CustomBufferedStream clientStream) Parameters Type Name Description CustomBufferedStream clientStream Returns Type Description Task < ClientHelloInfo > PeekServerHello(CustomBufferedStream) Declaration public static Task<ServerHelloInfo> PeekServerHello(CustomBufferedStream serverStream) Parameters Type Name Description CustomBufferedStream serverStream Returns Type Description Task < ServerHelloInfo >"
  },
  "api/StreamExtended.ServerHelloInfo.html": {
    "href": "api/StreamExtended.ServerHelloInfo.html",
    "title": "Class ServerHelloInfo | StreamExtended",
    "keywords": "Class ServerHelloInfo Inheritance Object ServerHelloInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended Assembly : StreamExtended.dll Syntax public class ServerHelloInfo Properties CipherSuite Declaration public int CipherSuite { get; set; } Property Value Type Description Int32 CompressionMethod Declaration public byte CompressionMethod { get; set; } Property Value Type Description Byte Extensions Declaration public List<SslExtension> Extensions { get; set; } Property Value Type Description List < SslExtension > MajorVersion Declaration public int MajorVersion { get; set; } Property Value Type Description Int32 MinorVersion Declaration public int MinorVersion { get; set; } Property Value Type Description Int32 Random Declaration public byte[] Random { get; set; } Property Value Type Description Byte [] SessionId Declaration public byte[] SessionId { get; set; } Property Value Type Description Byte [] Time Declaration public DateTime Time { get; } Property Value Type Description DateTime Methods ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/StreamExtended.Network.CustomBufferedPeekStream.html": {
    "href": "api/StreamExtended.Network.CustomBufferedPeekStream.html",
    "title": "Class CustomBufferedPeekStream | StreamExtended",
    "keywords": "Class CustomBufferedPeekStream Inheritance Object CustomBufferedPeekStream Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended.Network Assembly : StreamExtended.dll Syntax public class CustomBufferedPeekStream"
  },
  "api/StreamExtended.ClientHelloInfo.html": {
    "href": "api/StreamExtended.ClientHelloInfo.html",
    "title": "Class ClientHelloInfo | StreamExtended",
    "keywords": "Class ClientHelloInfo Inheritance Object ClientHelloInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : StreamExtended Assembly : StreamExtended.dll Syntax public class ClientHelloInfo Properties Ciphers Declaration public int[] Ciphers { get; set; } Property Value Type Description Int32 [] CompressionData Declaration public byte[] CompressionData { get; set; } Property Value Type Description Byte [] Extensions Declaration public List<SslExtension> Extensions { get; set; } Property Value Type Description List < SslExtension > MajorVersion Declaration public int MajorVersion { get; set; } Property Value Type Description Int32 MinorVersion Declaration public int MinorVersion { get; set; } Property Value Type Description Int32 Random Declaration public byte[] Random { get; set; } Property Value Type Description Byte [] SessionId Declaration public byte[] SessionId { get; set; } Property Value Type Description Byte [] Time Declaration public DateTime Time { get; } Property Value Type Description DateTime Methods ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  }
}